transclusion minor-minor mode

work in progress in progress.

basically a trimmed down version of [[https://github.com/gregdetre/emacs-freex][emacs-freex mode]]'s embedding mechanism

made primarily to work with org-mode files

what it's supposed to do

[[http://giant.gfycat.com/FlimsyDampIrishsetter.gif]]

playground

#+INCLUDE: "transclude.el" :lines 1-10

#+INCLUDE: "transclude.el" :lines "1-10"

#+INCLUDE: "transclude.el" :lines "1-"

# check link syntax? [[*also%20see][also see:1-9]]

#+INCLUDE: "random-test.txt" :lines 1-

* also see

  http://stackoverflow.com/questions/15328515/iso-transclusion-in-emacs-org-mode
  
  http://stackoverflow.com/a/15352203

  #+BEGIN_SRC emacs-lisp :results none
    (defun org-dblock-write:transclusion (params)
      (progn
        (with-temp-buffer
          (insert-file-contents (plist-get params :filename))
          (let ((range-start (or (plist-get params :min) (line-number-at-pos (point-min))))
                (range-end (or (plist-get params :max) (line-number-at-pos (point-max)))))
            (copy-region-as-kill (line-beginning-position range-start)
                                 (line-end-position range-end))))
        (yank)))
  #+END_SRC
  
  Then to include a line range from a given file, you can create a dynamic block like so:
  
  #+BEGIN: transclusion :filename "transclude.el" :min 2 :max 4
  #+END:

** John Kitchin's version (requires org-mode 9)

   see [[file:transcluding-org-elements.org]]
   
* using org-mode MACRO syntax instead of INCLUDE

  with [[http://orgmode.org/manual/Macro-replacement.html][org macros]] this seems to be a better option.

  see https://github.com/fniessen/org-macros/blob/master/org-macros.setup

  To test this, run the org-mode export process (e.g. =C-c C-e= then
  =h H= or =t A=), then find the text from =LICENSE= exported as well.

  TODO: figure out how to make this org-compatible. Right now it is
  trivially easy to cause export-time conflicts due to =eval=

** org-mode export interop test

#+MACRO: transclude (eval (with-temp-buffer (insert-file-contents "$1" nil $2 $3) (buffer-string)))

partial transclusion

{{{transclude(LICENSE,60,500)}}}

the whole thing

{{{transclude(LICENSE)}}}
